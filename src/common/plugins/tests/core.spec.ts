import resolveConfig from "tailwindcss/resolveConfig"
import { createGetPluginByName } from ".."
const getPlugin = createGetPluginByName(resolveConfig({}))

function testName(input: string, expectValue: string | undefined) {
	expect(getPlugin(input)?.getName()).toEqual(expectValue)
}

test("accentColor", () => {
	testName("accent-current", "accentColor")
	testName("accent-red-500", "accentColor")
	testName("accent-sand-100", undefined)
	testName("accent-[red]", "accentColor")
	testName("accent-[currentColor]", "accentColor")
	testName("accent-[rgb(120 60 120)]", "accentColor")
	testName("accent-[var(--custom-var)]", "accentColor")
	testName("accent-[]", "accentColor")
	testName("accent-[###]", "accentColor")
})

test("animation", () => {
	testName("animate-ping", "animation")
	testName("animate-fade", undefined)
	testName("animate-[spin]", "animation")
	testName("animate-[]", "animation")
	testName("animate-[###]", "animation")
})

test("aspectRatio", () => {
	testName("aspect-square", "aspectRatio")
	testName("aspect-none", undefined)
	testName("aspect-[1]", "aspectRatio")
	testName("aspect-[1 / 1]", "aspectRatio")
	testName("aspect-[]", "aspectRatio")
	testName("aspect-[###]", "aspectRatio")
})

test("backdropBlur", () => {
	testName("backdrop-blur", "backdropBlur")
	testName("backdrop-blur-2xl", "backdropBlur")
	testName("backdrop-blur-4xl", undefined)
	testName("backdrop-blur-[0]", "backdropBlur")
	testName("backdrop-blur-[2px]", "backdropBlur")
	testName("backdrop-blur-[]", "backdropBlur")
	testName("backdrop-blur-[###]", "backdropBlur")
})

test("backdropBrightness", () => {
	testName("backdrop-brightness-0", "backdropBrightness")
	testName("backdrop-brightness-200", "backdropBrightness")
	testName("backdrop-brightness-300", undefined)
	testName("backdrop-brightness-[0]", "backdropBrightness")
	testName("backdrop-brightness-[0.6]", "backdropBrightness")
	testName("backdrop-brightness-[3.4]", "backdropBrightness")
	testName("backdrop-brightness-[]", "backdropBrightness")
	testName("backdrop-brightness-[###]", "backdropBrightness")
})

test("backdropContrast", () => {
	testName("backdrop-contrast-0", "backdropContrast")
	testName("backdrop-contrast-125", "backdropContrast")
	testName("backdrop-contrast-300", undefined)
	testName("backdrop-contrast-[0]", "backdropContrast")
	testName("backdrop-contrast-[0.6]", "backdropContrast")
	testName("backdrop-contrast-[3.4]", "backdropContrast")
	testName("backdrop-contrast-[]", "backdropContrast")
	testName("backdrop-contrast-[###]", "backdropContrast")
})

test("backdropGrayscale", () => {
	testName("backdrop-grayscale", "backdropGrayscale")
	testName("backdrop-grayscale-0", "backdropGrayscale")
	testName("backdrop-grayscale-100", undefined)
	testName("backdrop-grayscale-[0]", "backdropGrayscale")
	testName("backdrop-grayscale-[0.6]", "backdropGrayscale")
	testName("backdrop-grayscale-[3.4]", "backdropGrayscale")
	testName("backdrop-grayscale-[]", "backdropGrayscale")
	testName("backdrop-grayscale-[###]", "backdropGrayscale")
})

test("backdropHueRotate", () => {
	testName("backdrop-hue-rotate-60", "backdropHueRotate")
	testName("backdrop-hue-rotate", undefined)
	testName("backdrop-hue-rotate-100", undefined)
	testName("backdrop-hue-rotate-[0]", "backdropHueRotate")
	testName("backdrop-hue-rotate-[0.6]", "backdropHueRotate")
	testName("backdrop-hue-rotate-[3.4]", "backdropHueRotate")
	testName("backdrop-hue-rotate-[]", "backdropHueRotate")
	testName("backdrop-hue-rotate-[###]", "backdropHueRotate")
})

test("backdropInvert", () => {
	testName("backdrop-invert", "backdropInvert")
	testName("backdrop-invert-0", "backdropInvert")
	testName("backdrop-invert-100", undefined)
	testName("backdrop-invert-[0]", "backdropInvert")
	testName("backdrop-invert-[0.6]", "backdropInvert")
	testName("backdrop-invert-[3.4]", "backdropInvert")
	testName("backdrop-invert-[]", "backdropInvert")
	testName("backdrop-invert-[###]", "backdropInvert")
})

test("backdropOpacity", () => {
	testName("backdrop-opacity", undefined)
	testName("backdrop-opacity-0", "backdropOpacity")
	testName("backdrop-opacity-100", "backdropOpacity")
	testName("backdrop-opacity-[0]", "backdropOpacity")
	testName("backdrop-opacity-[0.6]", "backdropOpacity")
	testName("backdrop-opacity-[3.4]", "backdropOpacity")
	testName("backdrop-opacity-[]", "backdropOpacity")
	testName("backdrop-opacity-[###]", "backdropOpacity")
})

test("backdropSaturate", () => {
	testName("backdrop-saturate", undefined)
	testName("backdrop-saturate-0", "backdropSaturate")
	testName("backdrop-saturate-100", "backdropSaturate")
	testName("backdrop-saturate-[0]", "backdropSaturate")
	testName("backdrop-saturate-[0.6]", "backdropSaturate")
	testName("backdrop-saturate-[3.4]", "backdropSaturate")
	testName("backdrop-saturate-[]", "backdropSaturate")
	testName("backdrop-saturate-[###]", "backdropSaturate")
})

test("backdropSepia", () => {
	testName("backdrop-sepia", "backdropSepia")
	testName("backdrop-sepia-0", "backdropSepia")
	testName("backdrop-sepia-100", undefined)
	testName("backdrop-sepia-[0]", "backdropSepia")
	testName("backdrop-sepia-[0.6]", "backdropSepia")
	testName("backdrop-sepia-[3.4]", "backdropSepia")
	testName("backdrop-sepia-[]", "backdropSepia")
	testName("backdrop-sepia-[###]", "backdropSepia")
})

test("blur", () => {
	testName("blur", "blur")
	testName("blur-2xl", "blur")
	testName("blur-4xl", undefined)
	testName("blur-[0]", "blur")
	testName("blur-[2px]", "blur")
	testName("blur-[]", "blur")
	testName("blur-[###]", "blur")
})

test("borderColor (ambiguous)", () => {
	testName("border-current", "borderColor")
	testName("border-red-500", "borderColor")
	testName("border-sand-100", undefined)
	testName("border-[red]", "borderColor")
	testName("border-[rgb(120 60 120)]", "borderColor")
	testName("border-[var(--custom-var)]", undefined)
	testName("border-[color:var(--custom-var)]", "borderColor")
	testName("border-[length:var(--custom-var)]", "borderWidth")
	testName("border-[]", undefined)
	testName("border-[###]", undefined)
	testName("border-t-current", "borderColor")
	testName("border-t-red-500", "borderColor")
	testName("border-t-sand-100", undefined)
	testName("border-t-[red]", "borderColor")
	testName("border-t-[rgb(120 60 120)]", "borderColor")
	testName("border-t-[var(--custom-var)]", undefined)
	testName("border-t-[color:var(--custom-var)]", "borderColor")
	testName("border-t-[length:var(--custom-var)]", "borderWidth")
	testName("border-t-[]", undefined)
	testName("border-t-[###]", undefined)
	testName("border-l-current", "borderColor")
	testName("border-l-red-500", "borderColor")
	testName("border-l-sand-100", undefined)
	testName("border-l-[red]", "borderColor")
	testName("border-l-[rgb(120 60 120)]", "borderColor")
	testName("border-l-[var(--custom-var)]", undefined)
	testName("border-l-[color:var(--custom-var)]", "borderColor")
	testName("border-l-[length:var(--custom-var)]", "borderWidth")
	testName("border-l-[]", undefined)
	testName("border-l-[###]", undefined)
	testName("border-b-current", "borderColor")
	testName("border-b-red-500", "borderColor")
	testName("border-b-sand-100", undefined)
	testName("border-b-[red]", "borderColor")
	testName("border-b-[rgb(120 60 120)]", "borderColor")
	testName("border-b-[var(--custom-var)]", undefined)
	testName("border-b-[color:var(--custom-var)]", "borderColor")
	testName("border-b-[length:var(--custom-var)]", "borderWidth")
	testName("border-b-[]", undefined)
	testName("border-b-[###]", undefined)
	testName("border-r-current", "borderColor")
	testName("border-r-red-500", "borderColor")
	testName("border-r-sand-100", undefined)
	testName("border-r-[red]", "borderColor")
	testName("border-r-[rgb(120 60 120)]", "borderColor")
	testName("border-r-[var(--custom-var)]", undefined)
	testName("border-r-[color:var(--custom-var)]", "borderColor")
	testName("border-r-[length:var(--custom-var)]", "borderWidth")
	testName("border-r-[]", undefined)
	testName("border-r-[###]", undefined)
})

test("borderOpacity", () => {
	testName("border-opacity-0", "borderOpacity")
	testName("border-opacity-100", "borderOpacity")
	testName("border-opacity-200", undefined)
	testName("border-opacity-[]", "borderOpacity")
	testName("border-opacity-[###]", "borderOpacity")
})

test("borderRadius", () => {
	testName("rounded", "borderRadius")
	testName("rounded-none", "borderRadius")
	testName("rounded-3xl", "borderRadius")
	testName("rounded-4xl", undefined)
	testName("rounded-full", "borderRadius")
	testName("rounded-[0]", "borderRadius")
	testName("rounded-[7px]", "borderRadius")
	testName("rounded-[]", "borderRadius")
	testName("rounded-[###]", "borderRadius")
	testName("rounded-t", "borderRadius")
	testName("rounded-t-none", "borderRadius")
	testName("rounded-t-3xl", "borderRadius")
	testName("rounded-t-4xl", undefined)
	testName("rounded-t-full", "borderRadius")
	testName("rounded-t-[0]", "borderRadius")
	testName("rounded-t-[7px]", "borderRadius")
	testName("rounded-t-[]", "borderRadius")
	testName("rounded-t-[###]", "borderRadius")
	testName("rounded-l", "borderRadius")
	testName("rounded-l-none", "borderRadius")
	testName("rounded-l-3xl", "borderRadius")
	testName("rounded-l-4xl", undefined)
	testName("rounded-l-full", "borderRadius")
	testName("rounded-l-[0]", "borderRadius")
	testName("rounded-l-[7px]", "borderRadius")
	testName("rounded-l-[]", "borderRadius")
	testName("rounded-l-[###]", "borderRadius")
	testName("rounded-b", "borderRadius")
	testName("rounded-b-none", "borderRadius")
	testName("rounded-b-3xl", "borderRadius")
	testName("rounded-b-4xl", undefined)
	testName("rounded-b-full", "borderRadius")
	testName("rounded-b-[0]", "borderRadius")
	testName("rounded-b-[7px]", "borderRadius")
	testName("rounded-b-[]", "borderRadius")
	testName("rounded-b-[###]", "borderRadius")
	testName("rounded-r", "borderRadius")
	testName("rounded-r-none", "borderRadius")
	testName("rounded-r-3xl", "borderRadius")
	testName("rounded-r-4xl", undefined)
	testName("rounded-r-full", "borderRadius")
	testName("rounded-r-[0]", "borderRadius")
	testName("rounded-r-[7px]", "borderRadius")
	testName("rounded-r-[]", "borderRadius")
	testName("rounded-r-[###]", "borderRadius")
})

test("borderWidth (ambiguous)", () => {
	testName("border", "borderWidth")
	testName("border-0", "borderWidth")
	testName("border-8", "borderWidth")
	testName("border-10", undefined)
	testName("border-[]", undefined)
	testName("border-[1.5]", undefined)
	testName("border-[1.5px]", "borderWidth")
	testName("border-t", "borderWidth")
	testName("border-t-0", "borderWidth")
	testName("border-t-8", "borderWidth")
	testName("border-t-10", undefined)
	testName("border-t-[]", undefined)
	testName("border-t-[1.5]", undefined)
	testName("border-t-[1.5px]", "borderWidth")
	testName("border-l", "borderWidth")
	testName("border-l-0", "borderWidth")
	testName("border-l-8", "borderWidth")
	testName("border-l-10", undefined)
	testName("border-l-[]", undefined)
	testName("border-l-[1.5]", undefined)
	testName("border-l-[1.5px]", "borderWidth")
	testName("border-b", "borderWidth")
	testName("border-b-0", "borderWidth")
	testName("border-b-8", "borderWidth")
	testName("border-b-10", undefined)
	testName("border-b-[]", undefined)
	testName("border-b-[1.5]", undefined)
	testName("border-b-[1.5px]", "borderWidth")
	testName("border-r", "borderWidth")
	testName("border-r-0", "borderWidth")
	testName("border-r-8", "borderWidth")
	testName("border-r-10", undefined)
	testName("border-r-[]", undefined)
	testName("border-r-[1.5]", undefined)
	testName("border-r-[1.5px]", "borderWidth")
})

test("boxShadow (ambiguous)", () => {
	testName("shadow", "boxShadow")
	testName("shadow-lg", "boxShadow")
	testName("shadow-inner", "boxShadow")
	testName("shadow-3xl", undefined)
	testName("shadow-[]", undefined)
	testName("shadow-[0]", undefined)
	testName("shadow-[#12]", undefined)
	testName("shadow-[var(10 * --custom-var)]", undefined)
	testName("shadow-[length:var(--custom-var)]", undefined)
	testName("shadow-[shadow:var(--custom-var)]", "boxShadow")
	testName("shadow-[0px 4px 5px #666]", "boxShadow")
	testName("shadow-[0px 4px 5px #666, 2px 6px 10px #999]", "boxShadow")
	testName("shadow-[current]", undefined)
	testName("shadow-[theme('any.any.any')]", undefined)
	testName("shadow-[theme(\"colors.red.500')]", undefined)
})

test("boxShadowColor (ambiguous)", () => {
	testName("shadow-red-500", "boxShadowColor")
	testName("shadow-[red]", "boxShadowColor")
	testName("shadow-[#666]", "boxShadowColor")
	testName("shadow-[rgb(120 60 120)]", "boxShadowColor")
	testName("shadow-[theme('colors.red.500')]", "boxShadowColor")
	testName('shadow-[theme("colors.red.500")]', "boxShadowColor")
	testName('shadow-[theme("colors.red.530")]', undefined)
	testName("shadow-[rgba(120 60 120 / 0.5)]", "boxShadowColor")
	testName("shadow-[rgb(120, 60, 120)]", "boxShadowColor")
	testName("shadow-[rgba(120, 60, 120, 0.5)]", "boxShadowColor")
	testName("shadow-[rgb(120 60 120 / 0.5)]", "boxShadowColor")
	testName("shadow-[rgb(120, 60, 120, 0.5)]", "boxShadowColor")
	testName("shadow-[color:var(--custom-var)]", "boxShadowColor")
})

test("brightness", () => {
	testName("brightness-0", "brightness")
	testName("brightness-200", "brightness")
	testName("brightness-300", undefined)
	testName("brightness-[0]", "brightness")
	testName("brightness-[0.6]", "brightness")
	testName("brightness-[3.4]", "brightness")
	testName("brightness-[]", "brightness")
	testName("brightness-[###]", "brightness")
})

test("caretColor", () => {
	testName("caret-current", "caretColor")
	testName("caret-stone-200", "caretColor")
	testName("caret-sand-300", undefined)
	testName("caret-[green]", "caretColor")
	testName("caret-[currentColor]", "caretColor")
	testName("caret-[rgb(120 220 120)]", "caretColor")
	testName("caret-[var(--custom-2)]", "caretColor")
	testName("caret-[]", "caretColor")
	testName("caret-[###]", "caretColor")
})

test("columns", () => {
	testName("columns-1", "columns")
	testName("columns-3", "columns")
	testName("columns-5", "columns")
	testName("columns-7", "columns")
	testName("columns-9", "columns")
	testName("columns-11", "columns")
	testName("columns-13", undefined)
	testName("columns-auto", "columns")
	testName("columns-4xs", undefined)
	testName("columns-3xs", "columns")
	testName("columns-xs", "columns")
	testName("columns-sm", "columns")
	testName("columns-5xl", "columns")
	testName("columns-8xl", undefined)
	testName("columns-[0]", "columns")
	testName("columns-[2em]", "columns")
	testName("columns-[]", "columns")
	testName("columns-[###]", "columns")
	testName("columns-[var(--custom)]", "columns")
})

test("content", () => {
	testName("content", undefined)
	testName("content-none", "content")
	testName("content-around", "alignContent")
	testName("content-['helloworld']", "content")
	testName("content-[any#@$]", "content")
})

test("contrast", () => {
	testName("contrast-0", "contrast")
	testName("contrast-75", "contrast")
	testName("contrast-200", "contrast")
	testName("contrast-300", undefined)
	testName("contrast-[]", "contrast")
	testName("contrast-[####]", "contrast")
	testName("contrast-[var(--custom)]", "contrast")
})

test("cursor", () => {
	testName("cursor-auto", "cursor")
	testName("cursor-default", "cursor")
	testName("cursor-not-allowed", "cursor")
	testName("cursor-center", undefined)
	testName("cursor-[]", "cursor")
	testName("cursor-[####]", "cursor")
})

test("divideColor (ambiguous)", () => {
	testName("divide-current", "divideColor")
	testName("divide-rose-500", "divideColor")
	testName("divide-sand-100", undefined)
	testName("divide-[red]", "divideColor")
	testName("divide-[rgb(120 60 120)]", "divideColor")
	testName("divide-[var(--custom-var)]", undefined)
	testName("divide-[color:var(--custom-var)]", "divideColor")
	testName("divide-[length:var(--custom-var)]", undefined)
	testName("divide-[]", undefined)
	testName("divide-[###]", undefined)
})

test("divideOpacity", () => {
	testName("divide-opacity-0", "divideOpacity")
	testName("divide-opacity-100", "divideOpacity")
	testName("divide-opacity-200", undefined)
	testName("divide-opacity-[]", "divideOpacity")
	testName("divide-opacity-[###]", "divideOpacity")
})

test("divideWidth (ambiguous)", () => {
	testName("divide-x", "divideWidth")
	testName("divide-x-0", "divideWidth")
	testName("divide-x-8", "divideWidth")
	testName("divide-x-10", undefined)
	testName("divide-x-reverse", "divideWidth")
	testName("divide-x-[]", undefined)
	testName("divide-x-[1.5]", undefined)
	testName("divide-x-[1.5px]", "divideWidth")
	testName("divide-y", "divideWidth")
	testName("divide-y-0", "divideWidth")
	testName("divide-y-8", "divideWidth")
	testName("divide-y-10", undefined)
	testName("divide-y-reverse", "divideWidth")
	testName("divide-y-[]", undefined)
	testName("divide-y-[1.5]", undefined)
	testName("divide-y-[1.5px]", "divideWidth")
})

test("dropShadow)", () => {
	testName("drop-shadow", "dropShadow")
	testName("drop-shadow-lg", "dropShadow")
	testName("drop-shadow-inner", undefined)
	testName("drop-shadow-3xl", undefined)
	testName("drop-shadow-none", "dropShadow")
	testName("drop-shadow-[]", "dropShadow")
	testName("drop-shadow-[0]", "dropShadow")
	testName("drop-shadow-[#12]", "dropShadow")
	testName("drop-shadow-[var(any * --custom-var)]", "dropShadow")
})

test("fill)", () => {
	testName("fill-current", "fill")
	testName("fill-transparent", "fill")
	testName("fill-rose-800", "fill")
	testName("fill-sand-800", undefined)
	testName("fill-[]", "fill")
	testName("fill-[#1A3D94]", "fill")
	testName("fill-[theme('colors.undefined')]", "fill")
	testName("fill-[var(--common)]", "fill")
	testName("fill-[url(#helloworld)]", "fill")
})

test("flex", () => {
	testName("flex-none", "flex")
	testName("flex-1", "flex")
	testName("flex-0", undefined)
	testName("flex-2", undefined)
	testName("flex-auto", "flex")
	testName("flex-initial", "flex")
	testName("flex-[]", "flex")
	testName("flex-[var(--common)]", "flex")
	testName("flex-[1 1 25px]", "flex")
	testName("flex-[25px]", "flex")
	testName("flex-[min-content]", "flex")
	testName("flex-[2 2]", "flex")
	testName("flex-[1 1 25px]", "flex")
	testName("flex-[url(#helloworld)]", "flex")
})

test("flexBasis", () => {
	testName("basis-0", "flexBasis")
	testName("basis-3", "flexBasis")
	testName("basis-28", "flexBasis")
	testName("basis-27", undefined)
	testName("basis-auto", "flexBasis")
	testName("basis-px", "flexBasis")
	testName("basis-0.5", "flexBasis")
	testName("basis-1/4", "flexBasis")
	testName("basis-full", "flexBasis")
	testName("basis-[]", "flexBasis")
	testName("basis-[1.0]", "flexBasis")
	testName("basis-[57%]", "flexBasis")
	testName("basis-[fit-content]", "flexBasis")
	testName("basis-[max-content]", "flexBasis")
	testName("basis-[min-content]", "flexBasis")
	testName("basis-[fill]", "flexBasis")
	testName("basis-[theme('spaces.undefined')]", "flexBasis")
	testName("basis-[var(--common)]", "flexBasis")
	testName("basis-[url(#helloworld)]", "flexBasis")
})

test("borderSpacing", () => {
	testName("border-spacing", undefined)
	testName("border-spacing-1", "borderSpacing")
	testName("border-spacing-11", "borderSpacing")
	testName("border-spacing-21", undefined)
	testName("border-spacing-[0]", "borderSpacing")
	testName("border-spacing-[2px]", "borderSpacing")
	testName("border-spacing-[]", "borderSpacing")
	testName("border-spacing-[###]", "borderSpacing")
	testName("border-spacing-x", undefined)
	testName("border-spacing-x-1", "borderSpacing")
	testName("border-spacing-x-11", "borderSpacing")
	testName("border-spacing-x-21", undefined)
	testName("border-spacing-x-[0]", "borderSpacing")
	testName("border-spacing-x-[2px]", "borderSpacing")
	testName("border-spacing-x-[]", "borderSpacing")
	testName("border-spacing-x-[###]", "borderSpacing")
	testName("border-spacing-y", undefined)
	testName("border-spacing-y-1", "borderSpacing")
	testName("border-spacing-y-11", "borderSpacing")
	testName("border-spacing-y-21", undefined)
	testName("border-spacing-y-[0]", "borderSpacing")
	testName("border-spacing-y-[2px]", "borderSpacing")
	testName("border-spacing-y-[]", "borderSpacing")
	testName("border-spacing-y-[###]", "borderSpacing")
})
